--- old/src/CherryPy-3.2.2/cherrypy/wsgiserver/ssl_builtin.py	2011-10-15 01:49:05.000000000 +0100
+++ new/src/CherryPy-3.2.2/cherrypy/wsgiserver/ssl_builtin.py	2016-01-27 15:43:51.795688601 +0000
@@ -49,7 +49,7 @@ class BuiltinSSLAdapter(wsgiserver.SSLAd
         try:
             s = ssl.wrap_socket(sock, do_handshake_on_connect=True,
                     server_side=True, certfile=self.certificate,
-                    keyfile=self.private_key, ssl_version=ssl.PROTOCOL_SSLv23)
+                    keyfile=self.private_key, ssl_version=ssl.PROTOCOL_TLSv1)
         except ssl.SSLError:
             e = sys.exc_info()[1]
             if e.errno == ssl.SSL_ERROR_EOF:
@@ -57,15 +57,8 @@ class BuiltinSSLAdapter(wsgiserver.SSLAd
                 # 'pinging' the socket to assert it's connectable;
                 # the 'ping' isn't SSL.
                 return None, {}
-            elif e.errno == ssl.SSL_ERROR_SSL:
-                if e.args[1].endswith('http request'):
-                    # The client is speaking HTTP to an HTTPS server.
-                    raise wsgiserver.NoSSLError
-                elif e.args[1].endswith('unknown protocol'):
-                    # The client is speaking some non-HTTP protocol.
-                    # Drop the conn.
-                    return None, {}
             raise
+
         return s, self.get_environ(s)
     
     # TODO: fill this out more with mod ssl env
